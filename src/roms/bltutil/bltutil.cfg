MEMORY {
    ZP:  		start = $0070, size = $0020, type = rw, define = yes;
    ROM: 		start = $8000, size = $3800, file = %O, fill=yes, fillval=$FF;
    ROM_NOICE: 		start = $F800, size = $07FA, file = %O, fill=yes, fillval=$FF;
    ROM_NOICE_V:	start = $FFFA, size = $06, file = %O, fill=yes, fillval=$FF;
    RAM_NOICE:		start = $C000, size = $1000;
    RAM_WRITEMEM:	start = $100, size = $30;
    RAM_READMEM:	start = $100, size = $30;
    RAM_TRANS_FL:   start = $2000, size = $500, define=yes;
}
SEGMENTS {
    CODE_ROMHEADER:     load = ROM, type = ro;
    CODE:     	        load = ROM, type = ro;
    RODATA:	            load = ROM, type = ro;
    ZEROPAGE: 	        load = ZP,  type = zp;

    CODE_NOICE:	        load = ROM_NOICE, type = ro;
    CODE_WRITEMEM:      load = ROM_NOICE, run = RAM_WRITEMEM,  define=yes;
    CODE_READMEM:       load = ROM_NOICE, run = RAM_READMEM,  define=yes;
    CODE_FLASH:         load = ROM, run = RAM_TRANS_FL, define=yes;
    VEC_NOICE:          load = ROM_NOICE_V, type = ro;

    BSS_NOICE:          load = RAM_NOICE, type = bss;


}
FEATURES {
}
SYMBOLS {
}